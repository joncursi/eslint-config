{
  "ecmaVersion": 2017,
  "env": {
    "jest/globals": true
  },
  "extends": [
    "airbnb",
    "plugin:flowtype/recommended",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:jest/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:lodash/recommended",
    "plugin:react/recommended"
  ],
  "parser": "babel-eslint",
  "plugins": [
    "disable",
    "filenames",
    "flowtype",
    "flowtype-errors",
    "immutable",
    "import",
    "jest",
    "jsx-a11y",
    "lodash",
    "new-with-error",
    "no-loops",
    "promise",
    "react",
    "security",
    "you-dont-need-lodash-underscore"
  ],
  "rules": {
    "filenames/match-regex": 2,
    "filenames/match-exported": [
      2,
      [
        "camel",
        "pascal"
      ]
    ],
    "flowtype/delimiter-dangle": [
      2,
      "always-multiline"
    ],
    "flowtype/require-return-type": [
      2,
      "always"
    ],
    "flowtype/require-valid-file-annotation": [
      2,
      "always",
      {
        "annotationStyle": "block"
      }
    ],
    "flowtype/require-variable-type": [
      0
    ],
    "flowtype/semi": [
      2,
      "always"
    ],
    "flowtype/sort-keys": [
      2,
      "asc",
      {
        "caseSensitive": true,
        "natural": false
      }
    ],
    "flowtype/type-id-match": [
      2,
      "^([A-Z][a-z]*)+FlowType$"
    ],
    "flowtype-errors/show-errors": 2,
    "immutable/no-let": 0,
    "immutable/no-this": 0,
    "immutable/no-mutation": 2,
    "import/named": 2,
    "import/namespace": [
      2,
      {
        "allowComputed": true
      }
    ],
    "import/no-extraneous-dependencies": [
      2,
      {
        "devDependencies": [
          "**/*.tests.js",
          "**/tests.js",
          "scripts/*.js"
        ]
      }
    ],
    "import/no-unresolved": [
      "error",
      {
        "ignore": [
          "^/",
          "^meteor/",
          ".graphql$",
          ".jpg$",
          ".png$"
        ]
      }
    ],
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "parent",
          "sibling",
          "index"
        ],
        "newlines-between": "always"
      }
    ],
    "lodash/prefer-lodash-method": 0,
    "new-with-error/new-with-error": "error",
    "no-loops/no-loops": 2,
    "no-underscore-dangle": [
      "error",
      {
        "allow": [
          "_cachedRowCount",
          "_dataBlob",
          "_ensureIndex",
          "_getPasswordResetTokenLifetimeMs",
          "_id"
        ],
        "allowAfterThis": true
      }
    ],
    "prefer-destructuring": [
      "off",
      {
        "array": true,
        "object": true
      },
      {
        "enforceForRenamedProperties": true
      }
    ],
    "promise/always-return": "error",
    "promise/avoid-new": "warn",
    "promise/catch-or-return": "error",
    "promise/no-callback-in-promise": "warn",
    "promise/no-nesting": "warn",
    "promise/no-promise-in-callback": "warn",
    "promise/no-return-wrap": "error",
    "promise/param-names": "error",
    "promise/prefer-await-to-callbacks": "warn",
    "promise/prefer-await-to-then": "warn",
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [
          ".js"
        ]
      }
    ],
    "react/sort-comp": [
      2,
      {
        "order": [
          "static-methods",
          "lifecycle",
          "everything-else",
          "render"
        ],
        "groups": {
          "static-methods": [
            "props",
            "state",
            "displayName",
            "contextTypes",
            "propTypes",
            "defaultProps",
            "navigationOptions"
          ],
          "lifecycle": [
            "childContextTypes",
            "constructor",
            "getDefaultProps",
            "getInitialState",
            "getChildContext",
            "componentWillMount",
            "componentDidMount",
            "componentWillReceiveProps",
            "shouldComponentUpdate",
            "componentWillUpdate",
            "componentDidUpdate",
            "componentWillUnmount"
          ]
        }
      }
    ],
    "security/detect-unsafe-regex": "error",
    "security/detect-non-literal-regexp": "error",
    "security/detect-non-literal-require": "error",
    "security/detect-object-injection": "off",
    "security/detect-possible-timing-attacks": "error",
    "sort-keys": [
      "error",
      "asc",
      {
        "caseSensitive": false
      }
    ],
    "you-dont-need-lodash-underscore/all": 1,
    "you-dont-need-lodash-underscore/any": 1,
    "you-dont-need-lodash-underscore/assign": 1,
    "you-dont-need-lodash-underscore/collect": 1,
    "you-dont-need-lodash-underscore/concat": 1,
    "you-dont-need-lodash-underscore/contains": 1,
    "you-dont-need-lodash-underscore/detect": 1,
    "you-dont-need-lodash-underscore/each": 1,
    "you-dont-need-lodash-underscore/every": 1,
    "you-dont-need-lodash-underscore/fill": 1,
    "you-dont-need-lodash-underscore/filter": 1,
    "you-dont-need-lodash-underscore/find": 1,
    "you-dont-need-lodash-underscore/find-index": 1,
    "you-dont-need-lodash-underscore/foldl": 1,
    "you-dont-need-lodash-underscore/foldr": 1,
    "you-dont-need-lodash-underscore/for-each": 1,
    "you-dont-need-lodash-underscore/includes": 1,
    "you-dont-need-lodash-underscore/index-of": 1,
    "you-dont-need-lodash-underscore/inject": 1,
    "you-dont-need-lodash-underscore/is-nan": 1,
    "you-dont-need-lodash-underscore/join": 1,
    "you-dont-need-lodash-underscore/keys": 1,
    "you-dont-need-lodash-underscore/last-index-of": 1,
    "you-dont-need-lodash-underscore/map": 1,
    "you-dont-need-lodash-underscore/reduce": 1,
    "you-dont-need-lodash-underscore/reduce-right": 1,
    "you-dont-need-lodash-underscore/repeat": 1,
    "you-dont-need-lodash-underscore/reverse": 1,
    "you-dont-need-lodash-underscore/select": 1,
    "you-dont-need-lodash-underscore/size": 1,
    "you-dont-need-lodash-underscore/some": 1,
    "you-dont-need-lodash-underscore/to-lower": 1,
    "you-dont-need-lodash-underscore/to-upper": 1,
    "you-dont-need-lodash-underscore/trim": 1
  },
  "settings": {
    "eslint-plugin-disable": {
      "paths": {
        "filenames": [
          "**/*.tests.js",
          "**/tests.js"
        ],
        "flowtype": [
          "**/*.tests.js",
          "**/tests.js",
          "scripts/*.js"
        ]
      }
    }
  }
}
